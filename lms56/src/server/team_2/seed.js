const mongoose = require("mongoose");
const dotenv = require("dotenv");
const Course = require("./models/Course");
const Lesson = require("./models/Lesson");
const Attendance = require("./models/Attendance");
const Submission = require("./models/Submission");

// Load environment variables from the root .env file
dotenv.config();

// Debug: Log environment variables
console.log('Environment variables:', {
    MONGO_URI: process.env.MONGO_URI,
    PORT: process.env.PORT
});

const courseData = [
  { id: 101, name: "–í–µ–± —Å–∏—Å—Ç–µ–º –±–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏ 101", seats: 120, time: "10:00 AM", status: "–ò–¥—ç–≤—Ö—Ç—ç–π", level: "bachelor" },
  { id: 220, name: "–ü—Ä–æ–≥—Ä–∞–º —Ö–∞–Ω–≥–∞–º–∂–∏–π–Ω –∏–Ω–∂–µ–Ω–µ—Ä—á–ª—ç–ª 220", seats: 80, time: "11:00 AM", status: "–ò–¥—ç–≤—Ö—Ç—ç–π", level: "bachelor" },
  { id: 201, name: "”®–≥”©–≥–¥–ª–∏–π–Ω —Å–∞–Ω 201", seats: 60, time: "01:00 PM", status: "–ò–¥—ç–≤—Ö—Ç—ç–π", level: "bachelor" },
  { id: 301, name: "“Æ“Ø–ª—ç–Ω —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏ 301", seats: 40, time: "02:00 PM", status: "–ò–¥—ç–≤—Ö—Ç—ç–π", level: "bachelor" },
  { id: 101, name: "–î–∞—Ç–∞ –∞–Ω–∞–ª–∏–∑ 101", seats: 20, time: "03:00 PM", status: "–ò–¥—ç–≤—Ö—Ç—ç–π", level: "master" },
  { id: 220, name: "“Æ–π–ª–¥–ª–∏–π–Ω —Å–∏—Å—Ç–µ–º 220", seats: 15, time: "04:00 PM", status: "–ò–¥—ç–≤—Ö—Ç—ç–π", level: "master" },
  { id: 201, name: "–¢”©—Å–ª–∏–π–Ω –º–µ–Ω–µ–∂–º–µ–Ω—Ç 201", seats: 10, time: "05:00 PM", status: "–ò–¥—ç–≤—Ö—Ç—ç–π", level: "master" },
];

const lessonData = [
  { id: 1, courseId: 101, name: "–õ–µ–∫—Ü 1", time: "10:00 AM" },
  { id: 2, courseId: 101, name: "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–π–Ω –∞–∂–∏–ª 1", time: "11:00 AM" },
  { id: 3, courseId: 101, name: "–ù—ç–º—ç–ª—Ç –¥–∞–¥–ª–∞–≥–∞ 1", time: "01:00 PM" },
  // Add more lessons for other courses
];

const attendanceData = [
  { courseId: 101, group: "5 - 4", type: "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–π–Ω —Ü–∞–≥", present: 24, absent: 6 },
  { courseId: 101, group: "5 - 5", type: "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–π–Ω —Ü–∞–≥", present: 20, absent: 4 },
  { courseId: 101, group: "5 - 6", type: "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–π–Ω —Ü–∞–≥", present: 31, absent: 8 },
  // Add more attendance records for other courses
];

const submissions = [
  {
    name: "–ú.–ë–æ–ª–æ—Ä-–≠—Ä–¥—ç–Ω—ç",
    group: "–ë–∏–µ –¥–∞–∞–ª—Ç",
    email: "bolormunkh12@gmail.com",
    studentId: "B221870017",
    team: "–î–∞–∞–ª–≥–∞–≤—Ä—ã–Ω —Ö—ç—Å—ç–≥",
    score: 100,
    percent: 100,
    date: "2025-02-10 07:42 PM",
    graded: true,
  },
  {
    name: "–ñ.–î–æ—Ä–∂",
    group: "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏",
    email: "dorj@example.com",
    studentId: "B221870018",
    team: "–®–∞–ª–≥–∞–ª—Ç—ã–Ω —Ö—ç—Å—ç–≥",
    score: 85,
    percent: 85,
    date: "2025-02-12 01:30 PM",
    graded: true,
  },
  {
    name: "–°.–¶—ç—Ü—ç–≥–º–∞–∞",
    group: "–ù—ç–º—ç–ª—Ç –¥–∞–∞–ª–≥–∞–≤–∞—Ä",
    email: "tsetsegmaa@example.com",
    studentId: "B221870019",
    team: "–ñ—É—Ä–Ω–∞–ª—ã–Ω —Ö—ç—Å—ç–≥",
    score: null,
    percent: null,
    date: "2025-02-09 09:15 AM",
    graded: false,
  },
  {
    name: "–î.–ë–∞—Ç-–≠—Ä–¥—ç–Ω—ç",
    group: "–ë–∏–µ –¥–∞–∞–ª—Ç",
    email: "baterdene@example.com",
    studentId: "B221870020",
    team: "–î“Ø–≥–Ω—ç–ª—Ç–∏–π–Ω —Ö—ç—Å—ç–≥",
    score: 92,
    percent: 92,
    date: "2025-02-11 10:00 AM",
    graded: true,
  },
  {
    name: "–¢.–ê—Ä–∏—É–Ω–∂–∞—Ä–≥–∞–ª",
    group: "–õ–µ–∫—Ü",
    email: "ariunjargal@example.com",
    studentId: "B221870021",
    team: "–ê–≥—É—É–ª–≥—ã–Ω —Ö—ç—Å—ç–≥",
    score: 76,
    percent: 76,
    date: "2025-02-11 03:20 PM",
    graded: true,
  },
  {
    name: "–ë.–≠–Ω—Ö—Ç“Ø–≤—à–∏–Ω",
    group: "–ù—ç–º—ç–ª—Ç –¥–∞–∞–ª–≥–∞–≤–∞—Ä",
    email: "enkhtuushin@example.com",
    studentId: "B221870022",
    team: "–•–∞–≤—Å—Ä–∞–ª—Ç —Ö—ç—Å—ç–≥",
    score: null,
    percent: null,
    date: "2025-02-13 08:55 AM",
    graded: false,
  },
  {
    name: "–¶.–û–¥–æ–Ω—á–∏–º—ç–≥",
    group: "–ë–∏–µ –¥–∞–∞–ª—Ç",
    email: "odonchimeg@example.com",
    studentId: "B221870023",
    team: "–¢–∞–Ω–∏–ª—Ü—É—É–ª–≥—ã–Ω —Ö—ç—Å—ç–≥",
    score: 89,
    percent: 89,
    date: "2025-02-12 02:10 PM",
    graded: true,
  },
  {
    name: "–ù.–•–∞–ª–∏—É–Ω",
    group: "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏",
    email: "khaliun@example.com",
    studentId: "B221870024",
    team: "–î“Ø–≥–Ω—ç–ª—Ç–∏–π–Ω —Ö—ç—Å—ç–≥",
    score: 95,
    percent: 95,
    date: "2025-02-10 04:00 PM",
    graded: true,
  },
  {
    name: "–ü.–≠—Ä–¥—ç–Ω—ç—Ü–æ–≥—Ç",
    group: "–õ–µ–∫—Ü",
    email: "erdenetsogt@example.com",
    studentId: "B221870025",
    team: "–ñ–∏—à—ç—ç–Ω–∏–π —Ö—ç—Å—ç–≥",
    score: null,
    percent: null,
    date: "2025-02-14 09:00 AM",
    graded: false,
  },
  {
    name: "–û.–ê–Ω—É–¥–∞—Ä—å",
    group: "–ë–∏–µ –¥–∞–∞–ª—Ç",
    email: "anudari@example.com",
    studentId: "B221870026",
    team: "–®–∞–ª–≥–∞–ª—Ç—ã–Ω —Ö—ç—Å—ç–≥",
    score: 100,
    percent: 100,
    date: "2025-02-13 07:42 PM",
    graded: true,
  },
  {
    name: "–°.–ì—ç—Ä—ç–ª–º–∞–∞",
    group: "–ù—ç–º—ç–ª—Ç –¥–∞–∞–ª–≥–∞–≤–∞—Ä",
    email: "gerelmaa@example.com",
    studentId: "B221870027",
    team: "–ê–≥—É—É–ª–≥—ã–Ω —Ö—ç—Å—ç–≥",
    score: 82,
    percent: 82,
    date: "2025-02-13 11:20 AM",
    graded: true,
  },
  {
    name: "–≠.–ù–∞—Ä–∞–Ω–∑—É–ª",
    group: "–õ–µ–∫—Ü",
    email: "naranzul@example.com",
    studentId: "B221870028",
    team: "–ñ—É—Ä–Ω–∞–ª—ã–Ω —Ö—ç—Å—ç–≥",
    score: null,
    percent: null,
    date: "2025-02-12 06:15 PM",
    graded: false,
  },
  {
    name: "–ë.–ú”©–Ω—Ö—Ü—ç—Ü—ç–≥",
    group: "–ë–∏–µ –¥–∞–∞–ª—Ç",
    email: "munkhtsetseg@example.com",
    studentId: "B221870029",
    team: "–¢–∞–Ω–∏–ª—Ü—É—É–ª–≥—ã–Ω —Ö—ç—Å—ç–≥",
    score: 97,
    percent: 97,
    date: "2025-02-11 01:00 PM",
    graded: true,
  },
  {
    name: "–ñ.–ù—è–º–∂–∞–≤",
    group: "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏",
    email: "nyamjav@example.com",
    studentId: "B221870030",
    team: "–•–∞–≤—Å—Ä–∞–ª—Ç —Ö—ç—Å—ç–≥",
    score: 88,
    percent: 88,
    date: "2025-02-11 02:30 PM",
    graded: true,
  },
  {
    name: "–ì.–≠–Ω—Ö–±–æ–ª–¥",
    group: "–ù—ç–º—ç–ª—Ç –¥–∞–∞–ª–≥–∞–≤–∞—Ä",
    email: "enkhbold@example.com",
    studentId: "B221870031",
    team: "–®–∞–ª–≥–∞–ª—Ç—ã–Ω —Ö—ç—Å—ç–≥",
    score: null,
    percent: null,
    date: "2025-02-13 03:33 PM",
    graded: false,
  },
  {
    name: "–ß.–ë—è–º–±–∞–∂–∞–≤",
    group: "–õ–µ–∫—Ü",
    email: "byambajav@example.com",
    studentId: "B221870032",
    team: "–î“Ø–≥–Ω—ç–ª—Ç–∏–π–Ω —Ö—ç—Å—ç–≥",
    score: 91,
    percent: 91,
    date: "2025-02-14 10:40 AM",
    graded: true,
  },
  {
    name: "–î.–ê–º–∞—Ä–∂–∞—Ä–≥–∞–ª",
    group: "–ë–∏–µ –¥–∞–∞–ª—Ç",
    email: "amarjargal@example.com",
    studentId: "B221870033",
    team: "–ê–≥—É—É–ª–≥—ã–Ω —Ö—ç—Å—ç–≥",
    score: 90,
    percent: 90,
    date: "2025-02-15 12:00 PM",
    graded: true,
  },
  {
    name: "–û.–°–æ–ª–æ–Ω–≥–æ",
    group: "–ù—ç–º—ç–ª—Ç –¥–∞–∞–ª–≥–∞–≤–∞—Ä",
    email: "solongo@example.com",
    studentId: "B221870034",
    team: "–ñ—É—Ä–Ω–∞–ª—ã–Ω —Ö—ç—Å—ç–≥",
    score: null,
    percent: null,
    date: "2025-02-16 09:30 AM",
    graded: false,
  },
  {
    name: "–¢.–ë–∏–ª–≥“Ø“Ø–Ω",
    group: "–õ–µ–∫—Ü",
    email: "bilguun@example.com",
    studentId: "B221870035",
    team: "–®–∞–ª–≥–∞–ª—Ç—ã–Ω —Ö—ç—Å—ç–≥",
    score: 84,
    percent: 84,
    date: "2025-02-16 02:25 PM",
    graded: true,
  },
  {
    name: "–ó.–ù–æ–º–∏–Ω",
    group: "–ë–∏–µ –¥–∞–∞–ª—Ç",
    email: "nominaa@example.com",
    studentId: "B221870036",
    team: "–ñ–∏—à—ç—ç–Ω–∏–π —Ö—ç—Å—ç–≥",
    score: null,
    percent: null,
    date: "2025-02-17 08:45 AM",
    graded: false,
  }
];

// Transform submissions to match MongoDB schema
const submissionData = submissions.map(submission => {
  // Randomly select submission type
  const submissionTypes = ["–ë–∏–µ –¥–∞–∞–ª—Ç", "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏", "–ù—ç–º—ç–ª—Ç –¥–∞–∞–ª–≥–∞–≤–∞—Ä"];
  const randomType = submissionTypes[Math.floor(Math.random() * submissionTypes.length)];

  return {
    courseId: 101, // All submissions are for course 101
    student: {
      name: submission.name,
      team: submission.team,
      email: submission.email,
      studentId: submission.studentId,
      teammates: []
    },
    submittedAt: submission.date,
    score: submission.score,
    grade: submission.graded ? "A" : null,
    feedback: submission.graded ? "–°–∞–π–Ω –∞–∂–∏–ª–ª–∞—Å–∞–Ω." : "–¢–∞–π–ª–±–∞—Ä —à–∞–∞—Ä–¥–ª–∞–≥–∞—Ç–∞–π.",
    files: ["assignment.pdf"],
    type: randomType // Add the random submission type
  };
});

let groupFilter = "";

// üî¢ Submission count –æ–ª–æ—Ö
const submissionCountMap = submissions.reduce((acc, cur) => {
  acc[cur.studentId] = (acc[cur.studentId] || 0) + 1;
  return acc;
}, {});


const seedDatabase = async () => {
  try {
    await mongoose.connect(process.env.MONGO_URI);
    console.log("Connected to MongoDB");

    // Clear existing data
    await Course.deleteMany({});
    await Lesson.deleteMany({});
    await Attendance.deleteMany({});
    await Submission.deleteMany({});
    console.log("Cleared existing data");

    // Insert new data
    await Course.insertMany(courseData);
    await Lesson.insertMany(lessonData);
    await Attendance.insertMany(attendanceData);
    await Submission.insertMany(submissionData);
    console.log("‚úÖ Data seeded successfully!");

  } catch (error) {
    console.error("‚ùå Error seeding database:", error);
  } finally {
    await mongoose.disconnect();
    console.log("Disconnected from MongoDB");
  }
};

// Run the seed function
seedDatabase();